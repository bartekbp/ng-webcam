!function(){"use strict";function n(){function n(){return['<div class="ng-webcam">','<div id="ng-webcam-container"></div>'].join("")}function e(n,e,i,o){o.init(),n.$on("$destroy",function(){o.destroy()})}function i(n,e,i){function o(){l.config=l.config||{},angular.isUndefined(l.config.viewerWidth)&&(l.config.viewerWidth="auto"),angular.isUndefined(l.config.viewerHeight)&&(l.config.viewerHeight="auto"),angular.isUndefined(l.config.outputWidth)&&(l.config.outputWidth=320),angular.isUndefined(l.config.outputHeight)&&(l.config.outputHeight=240),angular.isUndefined(l.config.delay)&&(l.config.delay=0),angular.isUndefined(l.config.shots)&&(l.config.shots=1),c(),a()}function t(){Webcam.reset(),l.webcamLive=!1,l.webcamLoaded=!1}function a(){angular.isDefined(l.config.shutterUrl)&&(u=new Audio,u.autoplay=!1,navigator.userAgent.match(/Firefox/)?u.src=l.config.shutterUrl.split(".")[0]+".ogg":u.src=l.config.shutterUrl),Webcam.set({width:l.config.viewerWidth,height:l.config.viewerHeight,dest_width:l.config.outputWidth,dest_height:l.config.outputHeight,force_flash:!1,image_format:"jpeg",jpeg_quality:100}),angular.isDefined(l.config.flashFallbackUrl)&&Webcam.setSWFLocation(l.config.flashFallbackUrl),angular.isDefined(l.config.flashNotDetectedText)&&Webcam.set("flashNotDetectedText",l.config.flashNotDetectedText),Webcam.attach("#ng-webcam-container")}function c(){Webcam.on("load",function(){n.$apply(function(){l.webcamLoaded=!0,angular.isDefined(l.onLoad)&&l.onLoad()})}),Webcam.on("live",function(){n.$apply(function(){l.webcamLive=!0,angular.isDefined(l.onLive)&&l.onLive()})}),Webcam.on("error",function(n){if(angular.isDefined(l.onError))return l.onError({err:n})})}function r(n){u&&u.play(),n===l.config.shots-1&&e.cancel(d),Webcam.snap(function(e){if(h[n]=e,n<l.config.shots-1&&angular.isDefined(l.onCaptureProgress)){var i=Math.round(100*(n+1)/l.config.shots);l.onCaptureProgress({src:e,progress:i})}if(n===l.config.shots-1&&angular.isDefined(l.onCaptureComplete))return l.onCaptureComplete({src:h})})}function f(){var n=0;d=e(function(){r(n),n++},1e3*l.config.delay,l.config.shots)}function g(){Webcam.attach("#ng-webcam-container")}function s(){t()}var u,d,l=this,h=[];l.webcamLoaded=!1,l.webcamLive=!1,l.progress="0%",l.init=o,l.destroy=t,n.$on("ngWebcam_capture",f),n.$on("ngWebcam_on",g),n.$on("ngWebcam_off",s)}var o={restrict:"E",template:n,link:e,bindToController:!0,controller:i,controllerAs:"cam",scope:{config:"=",onCaptureComplete:"&",onError:"&",onLoad:"&",onCaptureProgress:"&",onLive:"&"}};return i.$inject=["$scope","$interval","$window"],o}angular.module("ng-webcam",[]).directive("ngWebcam",n),n.$inject=[]}();
//# sourceMappingURL=data:application/json;base64,
